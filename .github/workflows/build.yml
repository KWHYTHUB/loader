name: Build Binaries

on:
  push:
    branches: [ main, addresser ]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        config:
        - name: "Windows"
          os: windows-latest
          extra_flags: '-G "Visual Studio 16 2019" -T host=x86 -A win32'
          gen_paths:  './build/Gen/Header.hpp ./build/Gen/Interface.hpp ./build/Gen/TempName.hpp'
          out_paths: './build/Release/geode.dll ./build/Release/geode.lib ./build/src/inject/windows/Release/XInput9_1_0.dll ./build/src/CCZipUtils/Release/CCZipUtils.lib'
        - name: "macOS"
          os: macos-latest
          extra_flags: ""
          gen_paths:  './build/gen/Header.hpp ./build/gen/Interface.hpp ./build/gen/TempName.hpp'
          out_paths: './build/Geode.dylib ./build/src/CCZipUtils/libCCZipUtils.a'
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive

    - uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: x86
      if: matrix.config.os == 'windows-latest'

    - name: Download ccache Windows
      run: |
         curl -LJO https://github.com/ccache/ccache/releases/download/v4.5.1/ccache-4.5.1-windows-64.zip
         unzip ${{ github.workspace }}/ccache-4.5.1-windows-64.zip -d ${{ github.workspace }}
         ls
         echo ${{ github.workspace }}/ccache-4.5.1-windows-64 >> $GITHUB_PATH 
      if: matrix.config.os == 'windows-latest'
      
    - name: ccache
      uses: figmentboy/ccache-action@v1.3
      with:
        key: ${{ matrix.config.os }}
    
    - name: Build with CMake
      uses: lukka/run-cmake@v3
      with:
        cmakeListsOrSettingsJson: CMakeListsTxtAdvanced
        cmakeListsTxtPath: '${{ github.workspace }}/CMakeLists.txt'
        cmakeAppendedArgs: '-DCMAKE_BUILD_TYPE=${{ matrix.type }} -DGEODE_DONT_BUILD_TEST_MODS=On -DGEODE_BUILD_UNIT_TESTS=On -DCMAKE_C_COMPILER_LAUNCHER=ccache -DCMAKE_CXX_COMPILER_LAUNCHER=ccache ${{ matrix.config.extra_flags }}'
        buildWithCMake: true
        buildDirectory: '${{ github.workspace }}/build'
          
    - name: Move to output folder
      shell: bash
      working-directory: ${{ github.workspace }}
      run: |
        mkdir ./out
        mkdir ./out/gen
        mv ${{ matrix.config.out_paths }} ./out
        mv ${{ matrix.config.gen_paths }} ./out/gen
        
    - name: Upload Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.config.name }} Loader Binary + Libraries
        path: ./out/
